create or replace NONEDITIONABLE PACKAGE BODY PKG_RERSERVATION_MANAGE AS

  PROCEDURE PROC_INS_RM(
		 IN_ROOM_ID		IN		VARCHAR2			-- 방 아이디
		,IN_DATE		IN		VARCHAR2			-- 예약일자
		,IN_GUBUN		IN		VARCHAR2			-- 예약가능구분값
		,IN_PRICE		IN		VARCHAR2			-- 기본 금액
		,IN_PERSON		IN		VARCHAR2			-- 기본 수용 인원
		,IN_ADD_PERSON	IN		VARCHAR2			-- 최대 추가 인원
		,IN_ADD_PRICE	IN		VARCHAR2			-- 추가 인원 당 금액
		,O_ERRCODE		OUT		VARCHAR2
		,O_ERRMSG		OUT		VARCHAR2
  ) AS
  
    V_NEW_ID		CHAR(5);						-- 예약관리아이디 생성
	V_CHK_ID		NUMBER(1);						-- 방 아이디 존재 여부 체크 
	V_CHK_DATE		NUMBER(1);						-- 방-날짜가 존재 여부 체크 
	
	RO_ID_EXCEPTION	EXCEPTION;
	DATE_EXCEPTION	EXCEPTION;
  
  BEGIN
  
    -- 방 아이디 존재 여부 확인
	SELECT COUNT(ROOM_ID)
	INTO V_CHK_ID
	FROM ROOM_TBL
	WHERE ROOM_ID = IN_ROOM_ID 
	;
	
	-- 날짜있는지
	SELECT COUNT(RM_ID)
	INTO V_CHK_DATE
	FROM RESERVATION_MANAGE_TBL
	WHERE ROOM_ID = IN_ROOM_ID
	AND RM_DATE = IN_DATE
	;
	-- 방 아이디 존재하지 않으면 예외처리
	IF V_CHK_ID = 0 THEN
		RAISE RO_ID_EXCEPTION;
    
	ELSIF V_CHK_DATE = 1 THEN 
		RAISE DATE_EXCEPTION;
		
	ELSE
		-- 예약 관리 아이디 할당
		SELECT 'RM' || TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(RM_ID), 3, 3)), 0) +1, 'FM000')
		INTO V_NEW_ID
		FROM RESERVATION_MANAGE_TBL
		;
		
		INSERT INTO RESERVATION_MANAGE_TBL(RM_ID, ROOM_ID, RM_DATE, RM_GUBUN, RM_PRICE, RM_PERSON, RM_ADD_PERSON, RM_ADD_PRICE)
		VALUES(V_NEW_ID, IN_ROOM_ID, IN_DATE, IN_GUBUN, IN_PRICE, IN_PERSON, IN_ADD_PERSON, IN_ADD_PRICE)
		;
	
	END IF;
	
	EXCEPTION
	WHEN RO_ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '방이 존재하지 않습니다.';
	
	WHEN DATE_EXCEPTION THEN
	O_ERRCODE := 'ERROR-002';
	O_ERRMSG := '이미 등록된 데이터입니다.';
	ROLLBACK;
	
	WHEN OTHERS THEN 
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_INS_RM;
  
  
  
  -- 예약 관리(예약 가능일자) 조회 
  PROCEDURE PROC_SEL_RM(
		 IN_RM_ID		IN		VARCHAR2		-- 예약관리아이디
		,IN_ROOM_ID		IN		VARCHAR2		-- 방 아이디
		,IN_DATE_S		IN		VARCHAR2		-- 시작 날짜
		,IN_DATE_E		IN		VARCHAR2		-- 끝 날짜
		,IN_MIN_PRICE	IN		VARCHAR2		-- 최소 금액
		,IN_MAX_PRICE	IN		VARCHAR2		-- 최대 금액
		,IN_PERSON		IN		VARCHAR2		-- 기본 인원
		,IN_MAX_PERSON	IN		VARCHAR2		-- 최대 인원
		,O_CUR			OUT		SYS_REFCURSOR
  )AS
  BEGIN
  
	OPEN O_CUR FOR
	SELECT A.RM_ID, A.ROOM_ID, A.RM_DATE, A.RM_PRICE, A.RM_PRICE, A.RM_PERSON, A.RM_ADD_PERSON
	FROM RESERVATION_MANAGE_TBL A,
	(
	SELECT T1.R_ID, T1.CUST_ID, T1.R_DATE, T1.R_PRICE, T2.RD_ID, T2.RM_ID, T2.R_GUBUN, T3.RC_ID, T3.GUBUN
	FROM RESERVATION_TBL T1, RESERVATION_DETAIL_TBL T2, CANCLE_RESERVATION_TBL T3
	WHERE T1.R_ID = T2.R_ID
	AND T1.R_ID = T3.R_ID(+)
	AND T2.R_GUBUN IS NULL
	AND T3.GUBUN IS NULL
	)B
	WHERE A.RM_GUBUN = 'O'
	AND A.RM_ID = B.RM_ID(+)
	AND B.RM_ID IS NULL
	AND A.RM_ID LIKE '%' || IN_RM_ID || '%'
	AND A.ROOM_ID LIKE '%' || IN_ROOM_ID || '%'
	AND A.RM_DATE BETWEEN NVL(IN_DATE_S,'17100101') AND NVL(IN_DATE_E, '30900101')
	AND A.RM_PRICE BETWEEN NVL(IN_MIN_PRICE,0) AND NVL(IN_MAX_PRICE,90000000) 
	AND (A.RM_PERSON + A.RM_ADD_PERSON) >= NVL(IN_MAX_PERSON,0)
	ORDER BY A.RM_ID
	;
  
  END PROC_SEL_RM;


  -- 예약 관리 수정 
  PROCEDURE PROC_UP_RM(
		 IN_RM_ID		IN		VARCHAR2		-- 예약관리아이디
		,IN_ROOM_ID     IN      VARCHAR2		-- 방아이디
        ,IN_RM_DATE     IN      DATE			-- 예약일자
		,IN_GUBUN		IN		VARCHAR2		-- 예약가능여부
		,IN_PRICE		IN		VARCHAR2		-- 기본금액
		,IN_PERSON		IN		VARCHAR2		-- 기본 수용 가능 인원
		,IN_ADD_PERSON	IN		VARCHAR2		-- 최대 추가 가능 인원
		,IN_ADD_PRICE	IN		VARCHAR2		-- 추가 인원 당 금액
		,O_ERRCODE		OUT		VARCHAR2
		,O_ERRMSG		OUT		VARCHAR2
  )AS
  
	V_CNT_ID				NUMBER(1);
	RM_ID_EXCEPTION			EXCEPTION;
  
  BEGIN
	
	SELECT COUNT(RM_ID)
	INTO V_CNT_ID
	FROM RESERVATION_MANAGE_TBL
	WHERE RM_ID = IN_RM_ID
	;
	
	IF V_CNT_ID = 0 THEN
		RAISE RM_ID_EXCEPTION;
	
	ELSE 
		UPDATE RESERVATION_MANAGE_TBL
		SET RM_GUBUN = IN_GUBUN, ROOM_ID = IN_ROOM_ID, RM_DATE = IN_RM_DATE, RM_PERSON = IN_PERSON, RM_ADD_PERSON = IN_ADD_PERSON, RM_ADD_PRICE = IN_ADD_PRICE
		WHERE RM_ID = IN_RM_ID
		;
	END IF;

	EXCEPTION
	WHEN RM_ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '예약관리데이터가 존재하지 않습니다.';
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_UP_RM;
  
  
  -- 예약 관리 삭제 
  PROCEDURE PROC_DEL_RM(
		IN_RM_ID		IN		VARCHAR2		-- 예약관리아이디
		,O_ERRCODE		OUT		VARCHAR2
		,O_ERRMSG		OUT		VARCHAR2
  )AS
  
	V_CNT_ID			NUMBER(1);
	RM_ID_EXCEPTION		EXCEPTION;
  
  BEGIN
  
	SELECT COUNT(RM_ID)
	INTO V_CNT_ID
	FROM RESERVATION_MANAGE_TBL
	WHERE RM_ID = IN_RM_ID
	;
  
	IF V_CNT_ID = 0 THEN
		RAISE RM_ID_EXCEPTION;
		
	ELSE
		DELETE FROM RESERVATION_MANAGE_TBL 
		WHERE RM_ID = IN_RM_ID
		;
		
	END IF;
	
	EXCEPTION
	WHEN RM_ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '삭제하려는 예약관리 데이터가 존재하지 않습니다.';
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_DEL_RM;

END PKG_RERSERVATION_MANAGE;