create or replace NONEDITIONABLE PACKAGE BODY PKG_LODGING AS

  -- 숙소 입력
  PROCEDURE PROC_INS_LOD(
	 IN_HOST_ID		IN		VARCHAR2		-- 호스트 아이디 
	,IN_G_COM_ID	IN		VARCHAR2		-- 지역 최하위 코드
	,IN_L_COM_ID	IN		VARCHAR2		-- 건물 최하위 코드
	,IN_L_NAME		IN		VARCHAR2		-- 건물 이름
	,IN_CHECK_IN	IN		VARCHAR2		-- 체크인 시간
	,IN_CHECK_OUT	IN		VARCHAR2		-- 체크아웃 시간
	,O_ERRCODE		OUT		VARCHAR2
	,O_ERRMSG		OUT		VARCHAR2
  ) AS
  
	V_NEW_LODGING_ID	CHAR(4);		-- 새로운 숙소 아이디 생성
	V_CHK_COM_ID		NUMBER(1);		-- 코드 존재 여부 확인
	V_G_PARENT_ID		CHAR(6);		-- 입력한 지역코드의 부모코드를 찾아온다. / IN_COM_ID를 받아와도 된다.
	V_L_PARENT_ID		CHAR(6);		-- 입력한 지역코드의 부모코드를 찾아온다. / IN_COM_ID를 받아와도 된다.
	
	G_COM_ID_EXCEPTION	EXCEPTION;
	L_COM_ID_EXCEPTION	EXCEPTION;
	
  BEGIN
  
	-- 입력한 지역코드 존재여부 확인
	SELECT COUNT(COM_ID)
	INTO V_CHK_COM_ID
	FROM COMMONS_TBL
	WHERE COM_ID = IN_G_COM_ID
	AND GRP_ID = 'GRP001'
	;
		IF V_CHK_COM_ID = 0 THEN
			RAISE G_COM_ID_EXCEPTION;
		END IF;
		
	-- 입력한 건물코드 존재여부 확인
	SELECT COUNT(COM_ID)
	INTO V_CHK_COM_ID
	FROM COMMONS_TBL
	WHERE COM_ID = IN_L_COM_ID
	AND GRP_ID = 'GRP002'
	;
		IF V_CHK_COM_ID = 0 THEN
			RAISE L_COM_ID_EXCEPTION;
		END IF;	
		
	-- 지역코드의 부모코드 찾기
	SELECT PARENT_ID
	INTO V_G_PARENT_ID
	FROM COMMONS_TBL
	WHERE GRP_ID = 'GRP001'
	AND COM_ID = IN_G_COM_ID
	;
	
	-- 건물코드의 부모코드 찾기 
	SELECT PARENT_ID
	INTO V_L_PARENT_ID
	FROM COMMONS_TBL
	WHERE GRP_ID = 'GRP002'
	AND COM_ID =  IN_L_COM_ID
	;
	
	-- 새로운 아이디 할당
	SELECT 'L' || TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(L_ID), 2, 3)), 0) +1, 'FM000')
	INTO V_NEW_LODGING_ID
	FROM LODGING_TBL;
	
	INSERT INTO LODGING_TBL(L_ID, HOST_ID, G_GRP_ID, G_COM_ID, G_COM_ID2
				, L_GRP_ID, L_COM_ID, L_COM_ID2, L_NAME, L_SCOPE, CHECKIN_TIME, CHECKOUT_TIME)
	VALUES(V_NEW_LODGING_ID, IN_HOST_ID, 'GRP001', V_G_PARENT_ID, IN_G_COM_ID
			,'GRP002',V_L_PARENT_ID, IN_L_COM_ID, IN_L_NAME, 0, IN_CHECK_IN, IN_CHECK_OUT)
	;
	
	EXCEPTION
	WHEN G_COM_ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '지역코드가 존재하지 않습니다.';
	
	WHEN L_COM_ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-002';
	O_ERRMSG := '건물코드가 존재하지 않습니다.';
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_INS_LOD;
  
  -- 건물 조회
  PROCEDURE PROC_SEL_LOD(
	 IN_L_ID			IN		VARCHAR2		-- 건물 아이디
	,IN_H_ID			IN		VARCHAR2		-- 호스트 아이디
	,IN_G_COM_ID		IN		VARCHAR2		-- 지역 상위 코드 (시)
	,IN_G_COM_ID2		IN		VARCHAR2		-- 지역 하위 코드 (구)
	,IN_L_COM_ID		IN		VARCHAR2		-- 건물 상위 코드
	,IN_L_COM_ID2		IN		VARCHAR2		-- 건물 하위 코드
	,IN_L_NAME			IN		VARCHAR2		-- 건물 이름
	,IN_L_SCOPE_S		IN		VARCHAR2		-- 별점 최저점	-- 구간하지 말고 그냥 지정할까요..?
	,IN_L_SCOPE_E		IN		VARCHAR2		-- 별점 최고점
	,IN_CHECKIN_TIME    IN 		VARCHAR2		-- 체크인 시간
    ,IN_CHECKOUT_TIME	IN 		VARCHAR2		-- 체크아웃 시간
	,O_CUR				OUT		SYS_REFCURSOR
  ) AS
  BEGIN
  
    OPEN O_CUR FOR
	SELECT A.L_ID, D.HOST_ID, D.HOST_NUM, D.HOST_NAME, D.HOST_LVL, D.LVL_VAL
		, A.L_NAME, B.P_ID, B.P_VAL, B.COM_ID, B.COM_VAL, C.P_ID, C.P_VAL, C.COM_ID, C.COM_VAL
		,A.L_SCOPE, A.CHECKIN_TIME, A.CHECKOUT_TIME
	FROM LODGING_TBL A,
		(-- 지역 구하기
		SELECT T1.COM_ID AS P_ID, T1.COM_VAL AS P_VAL, T2.COM_ID, T2.COM_VAL
		FROM COMMONS_TBL T1, COMMONS_TBL T2
		WHERE T1.GRP_ID = 'GRP001' 
		AND T1.GRP_ID = T2.GRP_ID
		AND T1.COM_ID = T2.PARENT_ID
		AND T1.COM_VAL != 'ROOT'
		)B,
		(-- 건물유형 구하기 
		SELECT T1.COM_ID AS P_ID, T1.COM_VAL AS P_VAL, T2.COM_ID, T2.COM_VAL
		FROM COMMONS_TBL T1, COMMONS_TBL T2
		WHERE T1.GRP_ID = 'GRP002'
		AND T1.GRP_ID = T2.GRP_ID
		AND T1.COM_ID = T2.PARENT_ID
		AND T1.COM_VAL != 'ROOT'
		)C,
		(
		SELECT T1.HOST_ID, T1.HOST_NAME, T1.HOST_NUM, T1.HOST_LVL, T2.COM_VAL AS LVL_VAL
		FROM HOST_TBL T1, COMMONS_TBL T2
		WHERE T2.GRP_ID = 'GRP004'
		AND T1.HOST_LVL = T2.COM_ID
		)D
	WHERE A.G_COM_ID2 = B.COM_ID
	AND A.L_COM_ID2 = C.COM_ID
	AND A.HOST_ID = D.HOST_ID
	AND A.L_ID LIKE '%' || IN_L_ID || '%'
	AND A.HOST_ID LIKE '%' || IN_H_ID || '%'
	AND A.G_COM_ID LIKE '%' || IN_G_COM_ID || '%'
	AND A.G_COM_ID2 LIKE '%' || IN_G_COM_ID2 || '%'
	AND A.L_COM_ID LIKE '%' || IN_L_COM_ID || '%'
	AND A.L_COM_ID2 LIKE '%' || IN_L_COM_ID2 || '%'
	AND A.L_NAME LIKE '%' || IN_L_NAME || '%'
	AND A.L_SCOPE BETWEEN NVL(IN_L_SCOPE_S, 0) AND NVL(IN_L_SCOPE_E, 0) --NULL 입력시 0~5점을 가져옴
	AND A.CHECKIN_TIME  LIKE '%' || IN_CHECKIN_TIME || '%'  
    AND A.CHECKOUT_TIME LIKE '%' || IN_CHECKOUT_TIME || '%' 
	;
	
  END PROC_SEL_LOD;
	
  
  -- 건물 정보 수정
  PROCEDURE PROC_UP_LOD(
	 IN_L_ID		IN		VARCHAR2		-- 건물 아이디
	,IN_G_COM_ID	IN		VARCHAR2		-- 지역 하위 코드 (구)
	,IN_L_COM_ID	IN		VARCHAR2		-- 지역 상위 코드 (시)
	,IN_L_NAME		IN		VARCHAR2		-- 건물 이름
	,IN_CHECK_IN	IN		VARCHAR2		-- 체크인 시간
	,IN_CHECK_OUT	IN		VARCHAR2		-- 체크아웃 시간
	,O_ERRCODE		OUT		VARCHAR2
	,O_ERRMSG		OUT		VARCHAR2
  ) AS
  
	V_CHK_ID			NUMBER(1);			-- 건물 아이디 존재여부 체크
	V_CHK_G				NUMBER(1);			-- 지역코드 존재여부 체크 
	V_CHK_L				NUMBER(1);			-- 건물코드 존쟁여부 체크
	G_PARENT_ID			CHAR(6);			-- 지역코드의 부모코드
	L_PARENT_ID			CHAR(6);			-- 건물코드의 부모코드
	
	CHK_ID_EXCEPTION	EXCEPTION; 
	CHK_G_EXCEPTION		EXCEPTION; 	
	CHK_L_EXCEPTION		EXCEPTION; 
	
  BEGIN
    
	-- 수정하려는 건물이 존재하는 지 확인
	SELECT COUNT(L_ID)
	INTO V_CHK_ID
	FROM LODGING_TBL
	WHERE L_ID = IN_L_ID
	;
	
	-- 입력하려는 지역코드가 존재하는 지 확인
	SELECT COUNT(COM_ID)
	INTO V_CHK_G
	FROM COMMONS_TBL
	WHERE COM_ID = IN_G_COM_ID
	AND GRP_ID = 'GRP001'
	;
	
	-- 입력하려는 건물코드가 존재하는 지 확인
	SELECT COUNT(COM_ID)
	INTO V_CHK_L
	FROM COMMONS_TBL
	WHERE COM_ID = IN_L_COM_ID
	AND GRP_ID = 'GRP002'
	;
	

	IF V_CHK_ID = 0 THEN
		RAISE CHK_ID_EXCEPTION;
		
	ELSIF V_CHK_G = 0 THEN
		RAISE CHK_G_EXCEPTION;
	
	ELSIF V_CHK_L = 0 THEN
		RAISE CHK_L_EXCEPTION;
	
	ELSE
		SELECT PARENT_ID
		INTO G_PARENT_ID
		FROM COMMONS_TBL
		WHERE COM_ID = IN_G_COM_ID
		AND GRP_ID = 'GRP001'
		;
		
		SELECT PARENT_ID
		INTO L_PARENT_ID
		FROM COMMONS_TBL
		WHERE COM_ID = IN_G_COM_ID
		AND GRP_ID = 'GRP002'
		;
		
		UPDATE LODGING_TBL
		SET G_COM_ID = G_PARENT_ID, G_COM_ID2 = IN_G_COM_ID, L_COM_ID2 = L_PARENT_ID, L_COM_ID = IN_L_COM_ID
			, L_NAME = IN_L_NAME, CHECKIN_TIME = IN_CHECK_IN, CHECKOUT_TIME = IN_CHECK_OUT
		WHERE L_ID = IN_L_ID
		;
	END IF;
	
	EXCEPTION
	WHEN CHK_ID_EXCEPTION THEN 
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '숙소가 존재하지 않습니다.';
	
	WHEN CHK_G_EXCEPTION THEN 
	O_ERRCODE := 'ERROR-002';
	O_ERRMSG := '지역코드가 존재하지 않습니다.';
	
	WHEN CHK_L_EXCEPTION THEN 
	O_ERRCODE := 'ERROR-003';
	O_ERRMSG := '건물코드가 존재하지 않습니다.';
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_UP_LOD;

  -- 숙소 삭제 
  PROCEDURE PROC_DEL_LOD(
	 IN_L_ID		IN		VARCHAR2		-- 숙소 아이디
	,O_ERRCODE		OUT		VARCHAR2
	,O_ERRMSG		OUT		VARCHAR2
  ) AS
	
	V_CNT_ID			NUMBER(1);
	
	L_ID_EXCEPTION		EXCEPTION;
	
  BEGIN
    
	-- 삭제하려는 숙소가 존재하는 지 확인
	SELECT COUNT(L_ID)
	INTO V_CNT_ID
	FROM LODGING_TBL
	WHERE L_ID = IN_L_ID
	;
	
	IF V_CNT_ID = 0 THEN
		RAISE L_ID_EXCEPTION;
		
	ELSE
		DELETE FROM LODGING_TBL 
		WHERE L_ID = IN_L_ID
		;
		
	END IF;
	
	EXCEPTION
	WHEN L_ID_EXCEPTION THEN 
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '숙소가 존재하지 않습니다.';
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_DEL_LOD;

END PKG_LODGING;