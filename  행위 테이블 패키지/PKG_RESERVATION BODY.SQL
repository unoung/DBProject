create or replace NONEDITIONABLE PACKAGE BODY PKG_RESERVATION AS

  -- 전제 : 자바에서 R_ID생성, R_ID를 넘겨줌
  -- 예약상세 테이블에 이미 입력 완료 된 상태에서 RERSERVATION_TBL 데이터 입력 
  PROCEDURE PROC_INS_RESERVATION(
		 IN_R_ID		IN		VARCHAR2		-- 자바에서 생성 후 DB로 전달받음
		,IN_CUST_ID		IN		VARCHAR2		-- 회원 아이디
		,IN_CUST_NAME	IN		VARCHAR2		-- 회원이름X, 예약자이름
		,IN_PERSON		IN		VARCHAR2		-- 예약 인원
		
		,O_ERRCODE		OUT		VARCHAR2
		,O_ERRMSG		OUT		VARCHAR2
  ) AS
  
	CHK_ID			NUMBER(1);				
	
	V_NEW_B_ID			CHAR(4);
	
	V_PERSON			NUMBER(2);
	V_PRICE				NUMBER(8);
	
	R_ID_EXCEPTION		EXCEPTION;
	CUST_ID_EXCEPTION	EXCEPTION;
	CUST_NAME_EXCEPTION EXCEPTION;
	TLTPERSON_EXCEPTION EXCEPTION;
	
  BEGIN
  
    -- 예약상세테이블에 입력받은 R_ID를 가진 데이터가 존재하는 지 확인
	SELECT COUNT(R_ID)
	INTO CHK_ID
	FROM RESERVATION_DETAIL_TBL
	WHERE R_ID = IN_R_ID;
	
	IF CHK_ID = 0 THEN
		RAISE R_ID_EXCEPTION;
	END IF;
    
	-- 예약하려는 고객이 비회원이라면 
	IF IN_CUST_ID IS NULL THEN
	    -- 예약자 이름을 기입했는 지 확인, 안했다면 예외처리 
		IF IN_CUST_NAME IS NULL THEN
			RAISE CUST_NAME_EXCEPTION;
		END IF;
		
		-- 예약자 이름을 기입했다면, 비회원 아이디를 생성
		SELECT 'B' || TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(CUST_ID), 2, 3)), 0) +1, 'FM000')
		INTO V_NEW_B_ID
		FROM CUSTOMER_TBL
		WHERE CUST_ID LIKE 'B%'
		;
		
		-- 할당
		INSERT INTO CUSTOMER_TBL(CUST_ID, CUST_NAME, CUST_TEL, GUBUN)
		VALUES(V_NEW_B_ID, IN_CUST_NAME, NULL, 'B')
		;
		
	-- 예약하려는 고객이 회원이라면 
	ELSE
		-- 회원 아이디가 존재하는 지 확인 
		SELECT COUNT(CUST_ID)
		INTO CHK_ID
		FROM CUSTOMER_TBL
		WHERE CUST_ID = IN_CUST_ID
		;
		
		-- 회원 아이디가 존재하지 않으면 예외처리 	
		IF CHK_ID = 0 THEN
			RAISE CUST_ID_EXCEPTION;
		END IF;	
		
	END IF;
	
	-- 금액 계산
	-- 1. 최대 수용 가능 인원 뽑아오기 
	SELECT MAX(RM_PERSON + RM_ADD_PERSON)
	INTO V_PERSON
	FROM RESERVATION_DETAIL_TBL T1, RESERVATION_MANAGE_TBL T2
	WHERE T1.RM_ID = T2.RM_ID
	AND T1.R_ID = IN_R_ID
	;
	
	-- 입력한 예약인원이 최대 수용 가능 인원보다 크다면 예외처리
	IF IN_PERSON > V_PERSON THEN		
		RAISE TLTPERSON_EXCEPTION;
	END IF;
	
	-- 예약하려는 방의 기본 인원 수 뽑아오기
	SELECT MAX(RM_PERSON)
	INTO V_PERSON
	FROM RESERVATION_DETAIL_TBL T1, RESERVATION_MANAGE_TBL T2
	WHERE T1.RM_ID = T2.RM_ID
	AND T1.R_ID = IN_R_ID
	;
	
	-- 입력한 예약 인원이 예약하려는 방의 기본 인원 수보다 크다면,
	-- 기본 금액 + ( 예약하려는 인원 - 방의 기본 인원 ) * 추가 인원 당 추가 금액 을 V_PRICE에 입력
	IF IN_PERSON - V_PERSON > 0 THEN
		SELECT SUM(RM_PRICE + ( IN_PERSON - RM_PERSON ) * RM_ADD_PRICE)
		INTO V_PRICE
		FROM RESERVATION_DETAIL_TBL T1, RESERVATION_MANAGE_TBL T2
		WHERE T1.RM_ID = T2.RM_ID
		AND T1.R_ID = IN_R_ID
		;
	
	-- 입력한 예약 인원이 예약하려는 방의 기본 인원 수보다 작거나 같다면
	ELSE 
		-- 예약하려는 방의 기본 금액을 V_PRICE에 입력
		SELECT SUM(RM_PRICE)
		INTO V_PRICE
		FROM RESERVATION_DETAIL_TBL T1, RESERVATION_MANAGE_TBL T2
		WHERE T1.RM_ID = T2.RM_ID
		AND T1.R_ID = IN_R_ID
		;
	END IF;
	
	-- 예약테이블 데이터 생성
	-- 비회원이라면
	IF IN_CUST_ID IS NULL THEN
		INSERT INTO RESERVATION_TBL(R_ID, CUST_ID, R_DATE, R_PRICE, R_PERSON)
		VALUES(IN_R_ID, V_NEW_B_ID, SYSDATE, V_PRICE, IN_PERSON)
		;
	
	-- 회원이라면
	ELSE
		INSERT INTO RESERVATION_TBL(R_ID, CUST_ID, R_DATE, R_PRICE, R_PERSON)
		VALUES(IN_R_ID, IN_CUST_ID, SYSDATE, V_PRICE, IN_PERSON)
		;
	END IF;
	
	EXCEPTION
	WHEN CUST_NAME_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '비회원은 예약자이름을 입력해야합니다.';
	
	WHEN CUST_ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-002';
	O_ERRMSG := '고객이 존재하지 않습니다.';
	
	WHEN TLTPERSON_EXCEPTION THEN
		DELETE FROM RESERVATION_DETAIL_TBL
		WHERE R_ID = IN_R_ID;
	O_ERRCODE := 'ERROR-003';
	O_ERRMSG := '최대 수용인원을 초과합니다.';
	
	WHEN R_ID_EXCEPTION	THEN
	O_ERRCODE := 'ERROR-004';
	O_ERRMSG := '예약건에 해당하는 예약상세데이터가 존재하지 않습니다.';
	ROLLBACK;
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_INS_RESERVATION;




  -- 예약건 조회
  PROCEDURE PROC_SEL_RESERVATION(
	 IN_R_ID		IN		VARCHAR2
	,IN_CUST_ID		IN		VARCHAR2
	,IN_R_DATE		IN		VARCHAR2
	
	,O_CUR			OUT		SYS_REFCURSOR
  )AS
  BEGIN
  
	OPEN O_CUR FOR
		SELECT A.R_ID, C.CUST_ID, DECODE(C.GUBUN,'C','회원','비회원') AS 고객구분, C.CUST_NAME, C.CUST_TEL
				,A.MIN_DATE, A.MAX_DATE, B.R_PERSON, B.R_PRICE, B.R_DATE
		FROM
			(
			SELECT T1.R_ID, MIN(RM_DATE) AS MIN_DATE, MAX(RM_DATE) AS MAX_DATE
			FROM RESERVATION_DETAIL_TBL T1, RESERVATION_MANAGE_TBL T2
			WHERE T1.RM_ID = T2.RM_ID
			GROUP BY T1.R_ID
			)A, RESERVATION_TBL B
			, CUSTOMER_TBL C
		WHERE A.R_ID = B.R_ID
		AND B.CUST_ID = C.CUST_ID
		AND A.R_ID LIKE '%' || IN_R_ID
		AND C.CUST_ID LIKE '%' || IN_CUST_ID
		AND B.R_DATE LIKE '%' || TO_DATE(IN_R_DATE, 'YYYYMMDD')
		ORDER BY A.R_ID
		;
		
  END PROC_SEL_RESERVATION;



  -- 예약 수정
  PROCEDURE PROC_UP_RESERVATION(
	 IN_R_ID		IN		VARCHAR2			-- 예약아이디
	,IN_PERSON		IN		VARCHAR2			-- 변경할 인원
	,O_ERRCODE		OUT		VARCHAR2
	,O_ERRMSG		OUT		VARCHAR2
  )AS
	
	V_CHK_ID		NUMBER(1);
	V_PERSON		NUMBER(1);
	V_PRICE			NUMBER(8);
	
	R_ID_EXCEPTION 	EXCEPTION;
	TLTPERSON_EXCEPTION	EXCEPTION;
  
  BEGIN

	-- 예약테이블에서 입력받은 R_ID가 존재하는 지 검사 
	SELECT COUNT(R_ID)
	INTO V_CHK_ID
	FROM RESERVATION_TBL
	WHERE R_ID = IN_R_ID
	;
	
	-- 데이터가 없으면 예외처리
	IF V_CHK_ID = 0 THEN
		RAISE R_ID_EXCEPTION;
	
	END IF;
	
	-- 수용가능 인원 확인
	SELECT MAX(RM_PERSON + RM_ADD_PERSON) 
	INTO V_PERSON
	FROM RESERVATION_DETAIL_TBL T1, RESERVATION_MANAGE_TBL T2
	WHERE T1.RM_ID = T2.RM_ID
	AND T1.R_ID = IN_R_ID
	;
	
	-- 변경하려는 인원 수가 최대 수용 가능 인원을 초과한다면 예외처리
	IF IN_PERSON > V_PERSON THEN 
		RAISE TLTPERSON_EXCEPTION;
	END IF;
	
	-- 가격
	-- 기본 인원 수 뽑아오기
	SELECT MAX(RM_PERSON)
	INTO V_PERSON
	FROM RESERVATION_DETAIL_TBL T1, RESERVATION_MANAGE_TBL T2
	WHERE T1.RM_ID = T2.RM_ID
	AND T1.R_ID = IN_R_ID
	;
	
	-- 변경하려는 인원 수가 기본 인원 수를 초과하면 
	IF IN_PERSON - V_PERSON > 0 THEN
		-- 기본 금액 + 초과인원 * 초과인원 당 금액
		SELECT SUM(RM_PRICE + (IN_PERSON - V_PERSON) * RM_ADD_PRICE)
		INTO V_PRICE
		FROM RESERVATION_DETAIL_TBL T1, RESERVATION_MANAGE_TBL T2
		WHERE T1.RM_ID = T2.RM_ID
		AND T1.R_ID = IN_R_ID
		;
	
	-- 변경하려는 인원 수가 기본인원수와 같거나 작으면	
	ELSE 
		-- 기본 금액을 가져온다
		SELECT SUM(RM_PRICE)
		INTO V_PRICE
		FROM RESERVATION_DETAIL_TBL T1, RESERVATION_MANAGE_TBL T2
		WHERE T1.RM_ID = T2.RM_ID
		AND T1.R_ID = IN_R_ID
		;
	END IF;
	
	-- 입력받은 R_ID를 가지는 데이터의 금액, 인원 데이터를 변경한다.
	UPDATE RESERVATION_TBL
	SET R_PRICE = V_PRICE, R_PERSON = IN_PERSON
	WHERE R_ID = IN_R_ID
	;
	
	EXCEPTION 
	WHEN R_ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '예약건이 존재하지 않습니다.';
	
	WHEN TLTPERSON_EXCEPTION THEN
	O_ERRCODE := 'ERROR-002';
	O_ERRMSG := '최대수용인원을 초과합니다.';
	ROLLBACK;

  END PROC_UP_RESERVATION;
  
  
  
  
  
  -- 예약건 삭제
  -- 이건 다 
  PROCEDURE PROC_DEL_RESERVATION(
	 IN_R_ID		IN		VARCHAR2			-- 예약아이디
	,O_ERRCODE		OUT		VARCHAR2
	,O_ERRMSG		OUT		VARCHAR2
  )AS
		V_CHK_ID		NUMBER(1);
		
		R_ID_EXCEPTION	EXCEPTION;
		
  BEGIN
		-- 입력받은 R_ID가 존재하는 지 검사 
		SELECT COUNT(R_ID)
		INTO V_CHK_ID
		FROM RESERVATION_TBL 
		WHERE R_ID = IN_R_ID
		;
		
		-- 존재하지 않는다면 예외처리
		IF V_CHK_ID = 0 THEN
			RAISE R_ID_EXCEPTION;
		
		-- 존재한다면 
		ELSE 
			-- 예약테이블에서 해당 데이터 삭제
			DELETE FROM RESERVATION_TBL
			WHERE R_ID = IN_R_ID
			;
			
			-- 예약상세테이블에서 해당 데이터 삭제  
			DELETE FROM RESERVATION_DETAIL_TBL
			WHERE R_ID = IN_R_ID
			;
			
		END IF;
		
		EXCEPTION
		WHEN R_ID_EXCEPTION THEN
		O_ERRCODE := 'ERROR-001';
		O_ERRMSG := '삭제하려는 예약건이 존재하지 않습니다.';
		
		WHEN OTHERS THEN
		O_ERRCODE := SQLCODE;
		O_ERRMSG := SQLERRM;
		
	
  END PROC_DEL_RESERVATION;


END PKG_RESERVATION;