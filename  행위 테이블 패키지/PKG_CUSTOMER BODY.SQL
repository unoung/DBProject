create or replace NONEDITIONABLE PACKAGE BODY PKG_CUSTOMER AS


  -- 고객 입력
  PROCEDURE PROC_INS_CUST(
	 IN_CUST_NAME	IN		VARCHAR2		-- 고객이름
	,IN_CUST_TEL	IN		VARCHAR2		-- 고객전화번호
	,IN_CUST_GUBUN	IN		VARCHAR2		-- 고객구분
	,O_ERRCODE		OUT		VARCHAR2
	,O_ERRMSG		OUT		VARCHAR2
  )AS

		V_NEW_CUST_ID		CHAR(4);		-- 새로운 고객 아이디

  BEGIN
	  -- 입력받은 고객 구분값이 C 라면
	  IF IN_CUST_GUBUN = 'C' THEN
	  -- 회원고객 ID 생성
		SELECT 'C' || TO_CHAR(TO_NUMBER(NVL(SUBSTR(MAX(CUST_ID), 2, 3), 0)) +1, 'FM000')
		INTO V_NEW_CUST_ID
		FROM CUSTOMER_TBL
		WHERE CUST_ID LIKE 'C%' -- CUST_ID가 C로 시작하는 데이터만 조회
		;

	-- 입력받은 고객 구분값이 B라면
	ELSIF IN_CUST_GUBUN = 'B' THEN
	-- 비회원고객 ID 생성
		SELECT 'B' || TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(CUST_ID), 2, 3)), 0) +1, 'FM000')
		INTO V_NEW_CUST_ID
		FROM CUSTOMER_TBL
		WHERE CUST_ID LIKE 'B%' -- CUST_ID가 B로 시작하는 데이터만 조회
		;

	END IF;

		INSERT INTO CUSTOMER_TBL(CUST_ID, CUST_NAME, CUST_TEL, GUBUN)
		VALUES(V_NEW_CUST_ID, IN_CUST_NAME, IN_CUST_TEL, IN_CUST_GUBUN)
		;

	  EXCEPTION
	  WHEN OTHERS THEN
	  O_ERRCODE := SQLCODE;
	  O_ERRMSG := SQLERRM;
	  ROLLBACK;
	  
  END PROC_INS_CUST;

  -- 고객 조회
  PROCEDURE PROC_SEL_CUST(
	 IN_CUST_ID		IN		VARCHAR2		-- 고객 아이디
	,IN_CUST_NAME	IN		VARCHAR2		-- 고객 이름
	,IN_CUST_TEL	IN		VARCHAR2		-- 고객 번호
	,IN_CUST_GUBUN	IN		VARCHAR2		-- 고객 구분값
	,O_CUR			OUT		SYS_REFCURSOR
  )AS
  BEGIN

	  OPEN O_CUR FOR
	  SELECT CUST_ID, CUST_NAME, CUST_TEL, GUBUN
	  FROM CUSTOMER_TBL
	  WHERE CUST_ID LIKE '%' || IN_CUST_ID || '%'
	  AND CUST_NAME LIKE '%' || IN_CUST_NAME || '%'
	  AND CUST_TEL LIKE '%' || IN_CUST_TEL || '%'
	  AND GUBUN LIKE '%' || IN_CUST_GUBUN
	  ORDER BY CUST_ID ASC
	  ;

  END PROC_SEL_CUST;

  PROCEDURE PROC_UP_CUST(
	 IN_CUST_ID		IN		VARCHAR2		-- 고객 아이디
	,IN_CUST_NAME	IN		VARCHAR2		-- 고객 이름
	,IN_CUST_TEL	IN		VARCHAR2		-- 고객 전화번호
	,IN_GUBUN		IN		VARCHAR2		-- 고객 구분값 << 이거 바뀌는 게 맞는 지? 이게 바뀌면 고객 아이디도 바뀌어야함
	,O_ERRCODE		OUT		VARCHAR2
	,O_ERRMSG		OUT		VARCHAR2
  )AS

	V_CHK_ID		NUMBER(1);			-- 고객 아이디 존재 여부 체크
	ID_EXCEPTION	EXCEPTION;			

  BEGIN

	SELECT COUNT(CUST_ID)				-- 입력받은 CUST_ID가 고객 테이블에 존재하는 지 확인한다. 
	INTO V_CHK_ID						-- 존재하면 V_CHK_ID = 1 , 존재하지 않는다면 V_CHK_ID = 0
	FROM CUSTOMER_TBL
	WHERE CUST_ID = IN_CUST_ID
	;

	IF V_CHK_ID = 0 THEN				-- 존재하지 않는다면 예외처리
		RAISE ID_EXCEPTION;

	ELSE
		UPDATE CUSTOMER_TBL				-- 존재한다면 CUST_ID가 입력받은 CUST_ID인 곳의 데이터를 업데이트 한다.
		SET CUST_NAME = IN_CUST_NAME, CUST_TEL = IN_CUST_TEL, GUBUN = IN_GUBUN
		WHERE CUST_ID = IN_CUST_ID
		;
	END IF;

	EXCEPTION
	WHEN ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '수정하려는 아이디가 존재하지 않습니다.';

	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_UP_CUST;


  -- 회원 삭제 
  PROCEDURE PROC_DEL_CUST(
	 IN_CUST_ID		IN		VARCHAR2			-- 고객 아이디
	,O_ERRCODE		OUT		VARCHAR2
	,O_ERRMSG		OUT		VARCHAR2
  )AS

	V_CUST_ID_CNT		NUMBER(1);				-- 고객 아이디 존재 여부 체크 
	V_CUST_CNT			NUMBER(3);
	CUST_ID_EXCEPTION	EXCEPTION;
	CUST_CNT_EXCEPTION	EXCEPTION;

  BEGIN

		-- 테이블에 데이터가 있는 지 체크
		SELECT COUNT(CUST_ID)
		INTO V_CUST_CNT
		FROM CUSTOMER_TBL
		;

		IF V_CUST_CNT = 0 THEN					-- 테이블에 데이터가 존재하지 않는다면
			RAISE CUST_CNT_EXCEPTION;
		END IF;

		-- IN_CUST_ID가 CUST_ID인 데이터의 갯수를 V_CUST_ID_CNT에 할당 / 존재하지 않으면 0, 존재하면 1
		SELECT COUNT(CUST_ID)
		INTO V_CUST_ID_CNT
		FROM CUSTOMER_TBL
		WHERE CUST_ID = IN_CUST_ID
		;

		IF V_CUST_ID_CNT = 0 THEN				-- CUST_ID가 IN_CUST_ID인 데이터가 존재하지 않는다면
			RAISE CUST_ID_EXCEPTION;

		ELSE									-- CUST_ID가 IN_CUST_ID인 데이터가 존재한다면
			DELETE FROM CUSTOMER_TBL 			-- CUSTOMER_TBL의 CUST_ID가 IN_CUST_ID 인 데이터를 삭제한다.
			WHERE CUST_ID = IN_CUST_ID
			;
		END IF;

		EXCEPTION 
		WHEN CUST_ID_EXCEPTION THEN
		O_ERRCODE := 'ERROR-002';
		O_ERRMSG := '회원아이디가 존재하지 않습니다.';

		WHEN CUST_CNT_EXCEPTION THEN
		O_ERRCODE := 'ERROR-001';
		O_ERRMSG := '고객이 한 명도 존재하지 않습니다.';

		WHEN OTHERS THEN
		O_ERRCODE := SQLCODE;
		O_ERRMSG := SQLERRM;
		ROLLBACK;
		
  END PROC_DEL_CUST;

END PKG_CUSTOMER;