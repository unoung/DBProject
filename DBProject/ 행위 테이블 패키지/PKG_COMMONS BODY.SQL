create or replace NONEDITIONABLE PACKAGE BODY PKG_COMMONS AS

  PROCEDURE PROC_INS_GRP(							-- GRP 입력
	  IN_GRP_VAL			IN		VARCHAR2		-- GRP 내용			
	 ,IN_EXC_VAL			IN		VARCHAR2		-- 예외처리1 내용
	 ,IN_EXC_VAL2			IN		VARCHAR2		-- 예외처리2 내용
	 ,O_ERRCODE				OUT		VARCHAR2
	 ,O_ERRMSG				OUT		VARCHAR2
  ) AS
	
		V_NEW_GRP_ID		CHAR(6);				-- 새로운 GRP_ID 할당
		V_NEW_COM_ID		CHAR(6);				-- 새로운 COM_ID 할당
		
  BEGIN
    
	-- 가장 큰 GRP_ID 값을 가져와서 새로운 GRP_ID를 생성 
	SELECT 'GRP' || TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(GRP_ID), 4, 3)), 0) +1, 'FM000')
	INTO V_NEW_GRP_ID
	FROM COMMONS_TBL
	;
	
	-- 가장 큰 COM_ID(ROOT) 값을 가져와서 새로운 COM_ID(ROOT)를 생성
	SELECT 'COM' || TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(COM_ID), 4, 1)), 0) +1, 'FM0') || '00'
	INTO V_NEW_COM_ID
	FROM COMMONS_TBL
	;
	
	INSERT INTO COMMONS_TBL(GRP_VAL, GRP_ID, COM_VAL, COM_ID, COM_LVL, PARENT_ID, EXC_VAL, EXC_VAL2)
	VALUES(IN_GRP_VAL, V_NEW_GRP_ID, 'ROOT', V_NEW_COM_ID, 0, 'ROOT', IN_EXC_VAL, IN_EXC_VAL2)
	;
	
	EXCEPTION
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_INS_GRP;
  
														
    PROCEDURE PROC_INS_COM(							-- COM 입력
	  IN_GRP_ID				IN		VARCHAR2			-- GRP_ID
	 ,IN_COM_VAL			IN		VARCHAR2			-- COM 내용
	 ,IN_PARENT_ID			IN		VARCHAR2			-- 부모코드
	 ,IN_EXC_VAL			IN		VARCHAR2			-- 예외처리1 내용
	 ,IN_EXC_VAL2			IN		VARCHAR2			-- 예외처리2 내용
	 ,O_ERRCODE				OUT		VARCHAR2
	 ,O_ERRMSG				OUT		VARCHAR2
  )AS
  
	V_CHK_ID		NUMBER(1);							-- 존재여부 체크
	
	V_NEW_ID		CHAR(6);
	V_GRP_VAL		VARCHAR(200);
	V_COM_LVL 		NUMBER(1);
	
	GRP_EXCEPTION	EXCEPTION;
  
  BEGIN
  
	-- 입력받은 IN_GRP_ID 값을 GRP_ID로 가지는 데이터들을 COUNT
	SELECT COUNT(GRP_ID)
	INTO V_CHK_ID
	FROM COMMONS_TBL
	WHERE GRP_ID = IN_GRP_ID
	;
	
	-- 값이 0이면 예외처리 
	IF V_CHK_ID = 0 THEN
		RAISE GRP_EXCEPTION;
	
	-- 값이 0이 아니면 ( 입력한 GRP_ID 데이터가 존재하면 )
	ELSE
		-- COM_ID 생성
		SELECT 'COM' || TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(COM_ID), 4, 3)) ,0) +1, 'FM000')
		INTO V_NEW_ID
		FROM COMMONS_TBL
		WHERE GRP_ID = IN_GRP_ID 
		AND COM_VAL != 'ROOT'
		;
		
		-- GRP_VAL 가져오기 
		SELECT MAX(GRP_VAL)
		INTO V_GRP_VAL 
		FROM COMMONS_TBL
		WHERE GRP_ID = IN_GRP_ID
		;
		
		-- COM_LVL 가져오기 
		SELECT COM_LVL +1
		INTO V_COM_LVL 
		FROM COMMONS_TBL
		WHERE GRP_ID = IN_GRP_ID
		AND COM_ID = IN_PARENT_ID
		;
		
		INSERT INTO COMMONS_TBL(GRP_VAL, GRP_ID, COM_VAL, COM_ID, COM_LVL, PARENT_ID, EXC_VAL, EXC_VAL2)
		VALUES(V_GRP_VAL, IN_GRP_ID, IN_COM_VAL, V_NEW_ID, V_COM_LVL, IN_PARENT_ID, IN_EXC_VAL, IN_EXC_VAL2)
		;
	
	END IF;
    
	EXCEPTION 
	WHEN GRP_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '그룹코드가 존재하지 않습니다.';
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_INS_COM;
  
  
  -- 조회
    PROCEDURE PROC_SEL_COM(
		IN_GRP_ID      	IN      VARCHAR2,			-- 그룹코드아이디
        IN_COM_VAL 		IN      VARCHAR2,			-- 공통코드내용
        IN_COM_ID  		IN      VARCHAR2,  		-- 공통코드아이디
        IN_COM_LVL 		IN      NUMBER,			-- 공통코드레벨
        O_CUR        	OUT    SYS_REFCURSOR
    )
    AS
    BEGIN
        OPEN O_CUR FOR
        SELECT GRP_ID, COM_ID, COM_VAL, COM_LVL,PARENT_ID
        FROM COMMONS_TBL
		WHERE COM_VAL LIKE '%' || IN_COM_VAL  || '%'
        AND COM_ID LIKE '%' || IN_COM_ID || '%'
        AND COM_LVL LIKE '%' || IN_COM_LVL || '%'
        
        START WITH PARENT_ID = 'ROOT' AND GRP_ID = IN_GRP_ID
        CONNECT BY PRIOR COM_ID = PARENT_ID AND GRP_ID =  IN_GRP_ID
        ;
    
    END PROC_SEL_COM;
	
	
	-- 삭제 
	PROCEDURE PROC_DEL_COMMONS(
        IN_GRP_ID      	IN 		VARCHAR2,			-- 그룹코드아이디
        IN_COM_ID  		IN 		VARCHAR2			-- 공통코드아이디
    )AS
    
    BEGIN
		
        DELETE FROM COMMONS_TBL
        WHERE COM_ID IN
        (
            SELECT COM_ID
            FROM COMMONS_TBL
            WHERE COM_VAL LIKE '%%'
            AND COM_ID LIKE '%%'
            AND COM_LVL LIKE '%%'
			
            START WITH PARENT_ID = 'ROOT' AND GRP_ID = IN_GRP_ID
            CONNECT BY PRIOR COM_ID = PARENT_ID AND GRP_ID = IN_GRP_ID
        ) AND GRP_ID = IN_GRP_ID
        ;
    
    END PROC_DEL_COMMONS;
	
	

 -- 삭제 
   PROCEDURE PROC_DEL_GRP(
		 IN_GRP_ID			IN		VARCHAR2		-- 그룹코드아이디
		 ,O_ERRCODE			OUT		VARCHAR2
		 ,O_ERRMSG			OUT		VARCHAR2
   )AS 
		V_CNT_ID			NUMBER(1);
		GRP_ID_EXCEPTION	EXCEPTION;
   BEGIN
	
	SELECT DECODE(MAX(GRP_ID), NULL, 0, 1)
	INTO V_CNT_ID
	FROM COMMONS_TBL 
	WHERE GRP_ID = IN_GRP_ID
	;
	
	IF V_CNT_ID = 0 THEN
		RAISE GRP_ID_EXCEPTION;
		
	ELSE
		DELETE FROM COMMONS_TBL
		WHERE GRP_ID = IN_GRP_ID
		;
	END IF;
	
	EXCEPTION
	WHEN GRP_ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '삭제할 그룹코드가 존재하지 않습니다.';
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
   END PROC_DEL_GRP;
   
 -- 삭제 
   PROCEDURE PROC_DEL_COM(
		 IN_GRP_ID			IN		VARCHAR2			-- 그룹코드아이디
		,IN_COM_ID			IN		VARCHAR2			-- 공통코드아이디
		,O_ERRCODE			OUT		VARCHAR2
		,O_ERRMSG			OUT		VARCHAR2
   )AS 
	
		V_CNT_GRP_ID			NUMBER(1);
		V_CNT_COM_ID			NUMBER(1);
		
		GRP_ID_EXCEPTION		EXCEPTION;
		COM_ID_EXCEPTION		EXCEPTION;
   
   BEGIN
   
		SELECT DECODE(MAX(GRP_ID),NULL, 0, 1)
		INTO V_CNT_GRP_ID
		FROM COMMONS_TBL
		WHERE GRP_ID = IN_GRP_ID
		;
		
		SELECT COUNT(COM_ID)
		INTO V_CNT_COM_ID
		FROM COMMONS_TBL
		WHERE GRP_ID = IN_GRP_ID
		AND COM_ID = IN_COM_ID
		;
		
		IF V_CNT_GRP_ID = 0 THEN
			RAISE GRP_ID_EXCEPTION;
		ELSIF V_CNT_COM_ID = 0 THEN
			RAISE COM_ID_EXCEPTION;
		ELSE
			DELETE FROM COMMONS_TBL 
			WHERE (COM_ID = IN_COM_ID OR PARENT_ID = IN_COM_ID)
			AND GRP_ID = IN_GRP_ID
			;
		END IF;
		
		EXCEPTION
		WHEN GRP_ID_EXCEPTION THEN
		O_ERRCODE := 'ERROR-001';
		O_ERRMSG := '그룹코드가 존재하지 않습니다.';
		
		WHEN COM_ID_EXCEPTION THEN
		O_ERRCODE := 'ERROR-002';
		O_ERRMSG := '공통코드가 존재하지 않습니다.';
		
		WHEN OTHERS THEN
		O_ERRCODE := SQLCODE;
		O_ERRMSG := SQLERRM;
	   ROLLBACK;
	   
   END PROC_DEL_COM;
   
     PROCEDURE PROC_UP_COMMONS
    (
        IN_GRP_VAL 	IN VARCHAR2,
        IN_GRP_ID   IN VARCHAR2,
        IN_COM_VAL 	IN VARCHAR2,
        IN_COM_ID  	IN VARCHAR2,  
        IN_COM_LVL 	IN NUMBER,
        IN_PARENT_ID   IN VARCHAR2,
        IN_EXC_VAL 	    IN VARCHAR2,
        IN_EXC_VAL2 	IN VARCHAR2
    ) 
  AS
        
  BEGIN
        UPDATE COMMONS_TBL
        SET  GRP_VAL= IN_GRP_VAL,
              COM_VAL = IN_COM_VAL,
              COM_LVL = IN_COM_LVL,
              PARENT_ID = IN_PARENT_ID,
              EXC_VAL = IN_EXC_VAL,
              EXC_VAL2 = IN_EXC_VAL2
        WHERE GRP_ID = IN_GRP_ID
        AND  COM_ID = IN_COM_ID;
            
  END PROC_UP_COMMONS;
   
END PKG_COMMONS;