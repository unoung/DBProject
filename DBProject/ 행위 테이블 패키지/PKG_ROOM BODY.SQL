create or replace NONEDITIONABLE PACKAGE BODY PKG_ROOM AS

  PROCEDURE PROC_INS_ROOM(
		 IN_L_ID		IN		VARCHAR2		-- 건물 아이디
		,IN_BED_EA		IN		VARCHAR2		-- 침대 수
		,IN_BEDROOM_EA	IN		VARCHAR2		-- 침실 수 
		,IN_BATH_EA		IN		VARCHAR2		-- 욕실 수
		,O_ERRCODE		OUT		VARCHAR2
		,O_ERRMSG		OUT		VARCHAR2
	) AS
	
		V_NEW_ID		CHAR(5);
		V_CHK_L_ID		NUMBER(1);
		
		L_ID_EXCEPTION	EXCEPTION;
	
  BEGIN
	
	-- 건물 아이디 존재 여부 체크 
	SELECT COUNT(L_ID)
	INTO V_CHK_L_ID
	FROM LODGING_TBL 
	WHERE L_ID = IN_L_ID
	;
	
	-- 존재하지 않으면 예외처리
	IF V_CHK_L_ID = 0 THEN
		RAISE L_ID_EXCEPTION;
	
	-- 존재하면 INSERT
	ELSE
		-- 방 아이디 생성
		SELECT 'RO' || TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(ROOM_ID), 3, 3)), 0) +1, 'FM000')
		INTO V_NEW_ID
		FROM ROOM_TBL
		;
		
		INSERT INTO ROOM_TBL(ROOM_ID, L_ID, BED, BEDROOM, BATH)
		VALUES(V_NEW_ID, IN_L_ID, IN_BED_EA, IN_BEDROOM_EA, IN_BATH_EA)
		;
	
	END IF;
	
	EXCEPTION
	WHEN L_ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '존재하지 않는 건물입니다.';
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_INS_ROOM;

  -- 방 조회
  PROCEDURE PROC_SEL_ROOM(
		 IN_ROOM_ID		IN		VARCHAR2			-- 방 아이디
		,IN_L_ID		IN		VARCHAR2			-- 건물 아이디
		,IN_BED_EA		IN		VARCHAR2			-- 침대 수 
		,IN_BEDROOM_EA	IN		VARCHAR2			-- 침실 수 
		,IN_BATH_EA		IN		VARCHAR2			-- 욕실 수
		,O_CUR			OUT		SYS_REFCURSOR
	) AS
  BEGIN
    
	OPEN O_CUR FOR
	-- 방 조회 
	SELECT T1.ROOM_ID, T1.L_ID, T2.L_NAME, T2.GP_ID, T2.GP_VAL, T2.G_COM_ID, T2.G_COM_VAL
			,T2.LP_ID, T2.LP_VAL, T2.L_COM_ID, T2.L_COM_VAL, T2.L_SCOPE
			,T1.BED, T1.BEDROOM, T1.BATH, T2.CHECKIN_TIME, T2.CHECKOUT_TIME
			,T2.HOST_ID, T2.HOST_NUM, T2.HOST_NAME, T2.HOST_LVL, T2.LVL_VAL
	FROM ROOM_TBL T1, 
		(
		SELECT A.L_ID, D.HOST_ID, D.HOST_NUM, D.HOST_NAME, D.HOST_LVL, D.LVL_VAL
				, A.L_NAME, B.GP_ID, B.GP_VAL, B.G_COM_ID, B.G_COM_VAL, C.LP_ID, C.LP_VAL, C.L_COM_ID, C.L_COM_VAL
				,A.L_SCOPE, A.CHECKIN_TIME, A.CHECKOUT_TIME
		FROM LODGING_TBL A,
			(-- 지역 구하기
			SELECT T1.COM_ID AS GP_ID, T1.COM_VAL AS GP_VAL, T2.COM_ID AS G_COM_ID, T2.COM_VAL AS G_COM_VAL
			FROM COMMONS_TBL T1, COMMONS_TBL T2
			WHERE T1.GRP_ID = 'GRP001' 
			AND T1.GRP_ID = T2.GRP_ID
			AND T1.COM_ID = T2.PARENT_ID
			AND T1.COM_VAL != 'ROOT'
			)B,
			(-- 건물유형 구하기 
			SELECT T1.COM_ID AS LP_ID, T1.COM_VAL AS LP_VAL, T2.COM_ID AS L_COM_ID, T2.COM_VAL AS L_COM_VAL
			FROM COMMONS_TBL T1, COMMONS_TBL T2
			WHERE T1.GRP_ID = 'GRP002'
			AND T1.GRP_ID = T2.GRP_ID
			AND T1.COM_ID = T2.PARENT_ID
			AND T1.COM_VAL != 'ROOT'
			)C,
			(
			SELECT T1.HOST_ID, T1.HOST_NAME, T1.HOST_NUM, T1.HOST_LVL, T2.COM_VAL AS LVL_VAL
			FROM HOST_TBL T1, COMMONS_TBL T2
			WHERE T2.GRP_ID = 'GRP004'
			AND T1.HOST_LVL = T2.COM_ID
			)D
		WHERE A.G_COM_ID2 = B.G_COM_ID
		AND A.L_COM_ID2 = C.L_COM_ID
		AND A.HOST_ID = D.HOST_ID
		) T2
	WHERE T1.L_ID = T2.L_ID
	AND T1.ROOM_ID LIKE '%' || IN_ROOM_ID || '%'
	AND T1.L_ID LIKE '%' || IN_L_ID || '%'
	AND T1.BED LIKE '%' || IN_BED_EA || '%'
	AND T1.BEDROOM LIKE '%' || IN_BEDROOM_EA || '%'
	AND T1.BATH LIKE '%' || IN_BATH_EA || '%'
	ORDER BY T1.ROOM_ID
	;
	
  END PROC_SEL_ROOM;

  -- 방 수정
  -- 건물도 수정가능하게 하려면 건물 아이디 존재하는 지 여부도 추가할 것
  PROCEDURE PROC_UP_ROOM(
		 IN_ROOM_ID		IN		VARCHAR2		-- 방아이디
		,IN_BED_EA		IN		VARCHAR2		-- 침대 수 
		,IN_BEDROOM_EA	IN		VARCHAR2		-- 침실 수 
		,IN_BATH_EA		IN		VARCHAR2		-- 욕실 수 
		,O_ERRCODE		OUT		VARCHAR2
		,O_ERRMSG		OUT		VARCHAR2
	) AS
		
		V_CNT_ID			NUMBER(1);
		
		ROOM_ID_EXCEPTION	EXCEPTION;
		
  BEGIN
    
	SELECT COUNT(ROOM_ID)
	INTO V_CNT_ID
	FROM ROOM_TBL
	WHERE ROOM_ID = IN_ROOM_ID
	;
	
	IF V_CNT_ID = 0 THEN
		RAISE ROOM_ID_EXCEPTION;
	
	ELSE 
		UPDATE ROOM_TBL
		SET BED = IN_BED_EA, BEDROOM = IN_BEDROOM_EA, BATH = IN_BATH_EA
		WHERE ROOM_ID = IN_ROOM_ID
		;
	END IF;
	
	EXCEPTION
	WHEN ROOM_ID_EXCEPTION THEN 
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '수정하려는 방이 존재하지 않습니다.';
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_UP_ROOM;

  -- 방 삭제
  PROCEDURE PROC_DEL_ROOM(
		 IN_ROOM_ID		IN		VARCHAR2		-- 방 아이디
		,O_ERRCODE		OUT		VARCHAR2
		,O_ERRMSG		OUT		VARCHAR2
	) AS
	
		V_CNT_ID			NUMBER(1);
		ROOM_ID_EXCEPTION	EXCEPTION;
		
  BEGIN
    
	SELECT COUNT(ROOM_ID)
	INTO V_CNT_ID
	FROM ROOM_TBL 
	WHERE ROOM_ID = IN_ROOM_ID
	;
	
	IF V_CNT_ID = 0 THEN
		RAISE ROOM_ID_EXCEPTION;
	
	ELSE 
		DELETE FROM ROOM_TBL 
		WHERE ROOM_ID = IN_ROOM_ID;
	END IF;
	
	EXCEPTION
	WHEN ROOM_ID_EXCEPTION THEN
	O_ERRCODE := 'ERROR-001';
	O_ERRMSG := '삭제하려는 방이 존재하지 않습니다.';
	
	WHEN OTHERS THEN
	O_ERRCODE := SQLCODE;
	O_ERRMSG := SQLERRM;
	ROLLBACK;
	
  END PROC_DEL_ROOM;

END PKG_ROOM;