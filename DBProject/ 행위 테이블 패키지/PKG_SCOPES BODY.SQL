create or replace NONEDITIONABLE PACKAGE BODY PKG_SCOPES AS

--추가
  PROCEDURE PROC_INS_SCOPES
  (
    IN_R_ID           IN  VARCHAR
    ,IN_SCOPES      IN  NUMBER
    ,O_ERRCODE      OUT VARCHAR
    ,O_ERRMSG       OUT VARCHAR
  ) 
  AS
  
    V_CHK_CNT     CHAR(4);
   V_SCOPE_CNT     CHAR(4);
    V_SCOPES      CHAR(4);
    V_EXCEPTION1  EXCEPTION;
    V_EXCEPTION2  EXCEPTION;
   V_EXCEPTION3  EXCEPTION;
  BEGIN
    
    SELECT COUNT(R_ID)
    INTO V_CHK_CNT
    FROM CHECK_TBL
    WHERE R_ID = IN_R_ID;
        
    SELECT COUNT(R_ID)
    INTO V_SCOPE_CNT
    FROM SCOPE_TBL
    WHERE R_ID = IN_R_ID;
   
   
   IF V_CHK_CNT = 0 THEN
       RAISE V_EXCEPTION1;
       
   ELSIF V_SCOPE_CNT = 1 THEN
      RAISE V_EXCEPTION3;
      
    ELSIF IN_SCOPES < 0 OR IN_SCOPES > 5 THEN   --0보다 작거나 5보다 크면 예외
       RAISE V_EXCEPTION2;
       
    ELSE
        INSERT INTO SCOPE_TBL(R_ID, SCOPES) VALUES( IN_R_ID, NVL(IN_SCOPES, 0));
		MERGE INTO LODGING_TBL Z
		USING(
				SELECT C.L_ID, C.HOST_ID, ROUND(SUM(B.SCOPES)/(COUNT(B.SCOPES)),2) AS L_SCOPES
				FROM RESERVATION_MANAGE_TBL A,
					(
					SELECT T1.R_ID, T1.SCOPES, MAX(T2.RM_ID) AS RM_ID
					FROM SCOPE_TBL T1, RESERVATION_DETAIL_TBL T2
					WHERE T1.R_ID = T2.R_ID
					AND T1.SCOPES IS NOT NULL 
					GROUP BY T1.R_ID, T1.SCOPES
					)B,
					(
					SELECT T1.ROOM_ID, T1.L_ID, T2.HOST_ID
					FROM ROOM_TBL T1, LODGING_TBL T2
					WHERE T1.L_ID = T2.L_ID
					)C
				WHERE A.RM_ID = B.RM_ID
				AND A.ROOM_ID = C.ROOM_ID
				GROUP BY C.L_ID, C.HOST_ID
			  )X
		ON(Z.L_ID = X.L_ID)
		WHEN MATCHED THEN
			UPDATE SET Z.L_SCOPE = X.L_SCOPES
		;
    
    END IF;

      EXCEPTION
      WHEN V_EXCEPTION1 THEN
      O_ERRMSG := '체크아웃을 통해 작성 가능합니다';
      O_ERRCODE := 'ERR001';
      ROLLBACK;
      WHEN V_EXCEPTION2 THEN
      O_ERRMSG := '0보다 작거나 5보다 클 수 없음!';
      O_ERRCODE := 'ERR002';
      ROLLBACK;
     WHEN V_EXCEPTION3 THEN
      O_ERRMSG := '이미 입력된 건입니다.';
      O_ERRCODE := 'ERR003';
      ROLLBACK;
      WHEN OTHERS THEN
      O_ERRMSG := SQLERRM;
      O_ERRCODE := SQLCODE;
      ROLLBACK;
  END PROC_INS_SCOPES;
  
  
--조회
  PROCEDURE PROC_SEL_SCOPES
  (
    IN_R_ID        IN  VARCHAR
    ,IN_SCOPES      IN  NUMBER
    ,O_CURSOR   OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN O_CURSOR FOR
    SELECT T1.R_ID, T2.CUST_ID, T3.CUST_NAME, T1.SCOPES
	FROM SCOPE_TBL T1, RESERVATION_TBL T2, CUSTOMER_TBL T3
	WHERE T1.R_ID = T2.R_ID
	AND T2.CUST_ID = T3.CUST_ID 
    AND T1.R_ID LIKE '%' || IN_R_ID|| '%'
    ;
	
  END PROC_SEL_SCOPES;
  
--수정
  PROCEDURE PROC_UP_SCOPES
  (
    IN_R_ID        IN  VARCHAR
    ,IN_SCOPES      IN  NUMBER
    ,O_ERRCODE   OUT VARCHAR
    ,O_ERRMSG    OUT VARCHAR
  ) 
  AS
  
    V_CHK_ID    CHAR(4);
    V_CHK_CNT    CHAR(4);
    V_EXCEPTION  EXCEPTION;
  BEGIN

    
    SELECT COUNT(R_ID)
    INTO V_CHK_CNT
    FROM SCOPE_TBL
    WHERE R_ID = IN_R_ID;
    
    
    IF V_CHK_CNT > 0 THEN
    
        UPDATE SCOPE_TBL 
		SET R_ID =IN_R_ID, SCOPES = IN_SCOPES
        WHERE R_ID = IN_R_ID;

		MERGE INTO LODGING_TBL Z
		USING(
				SELECT C.L_ID, C.HOST_ID, ROUND(SUM(B.SCOPES)/(COUNT(B.SCOPES)),2) AS L_SCOPES
				FROM RESERVATION_MANAGE_TBL A,
					(
					SELECT T1.R_ID, T1.SCOPES, MAX(T2.RM_ID) AS RM_ID
					FROM SCOPE_TBL T1, RESERVATION_DETAIL_TBL T2
					WHERE T1.R_ID = T2.R_ID
					AND T1.SCOPES IS NOT NULL 
					GROUP BY T1.R_ID, T1.SCOPES
					)B,
					(
					SELECT T1.ROOM_ID, T1.L_ID, T2.HOST_ID
					FROM ROOM_TBL T1, LODGING_TBL T2
					WHERE T1.L_ID = T2.L_ID
					)C
				WHERE A.RM_ID = B.RM_ID
				AND A.ROOM_ID = C.ROOM_ID
				GROUP BY C.L_ID, C.HOST_ID
			  )X
		ON(Z.L_ID = X.L_ID)
		WHEN MATCHED THEN
			UPDATE SET Z.L_SCOPE = X.L_SCOPES
		;
		
    ELSE 
        RAISE V_EXCEPTION;  
    END IF;
    
      EXCEPTION
      WHEN V_EXCEPTION THEN
      O_ERRMSG := '정보가 없습니다!';
      O_ERRCODE := 'ERR001';
	  
      ROLLBACK;
      WHEN OTHERS THEN
      O_ERRMSG := SQLERRM;
      O_ERRCODE := SQLCODE;
      
  END PROC_UP_SCOPES;
  
--삭제
  PROCEDURE PROC_DEL_SCOPES
  (
    IN_R_ID        IN  VARCHAR
    --,IN_SCOPES      IN  NUMBER
    ,O_ERRCODE   OUT VARCHAR
    ,O_ERRMSG    OUT VARCHAR
  )  
  AS
  
    V_CHK_ID    CHAR(4);
    V_CHK_CNT    CHAR(4);
    V_EXCEPTION  EXCEPTION;
  BEGIN
    

    SELECT COUNT(R_ID)
    INTO V_CHK_CNT
    FROM SCOPE_TBL
    WHERE R_ID = IN_R_ID
    ;
    
    IF V_CHK_CNT > 0 THEN
        
        DELETE FROM SCOPE_TBL 
		WHERE R_ID = IN_R_ID;

    ELSE 
             RAISE V_EXCEPTION; 
    END IF;
    
      EXCEPTION
      WHEN V_EXCEPTION THEN
      O_ERRMSG := '정보가 없습니다!';
      O_ERRCODE := 'ERR001';
      ROLLBACK;
      WHEN OTHERS THEN
      O_ERRMSG := SQLERRM;
      O_ERRCODE := SQLCODE;
  END PROC_DEL_SCOPES;

END PKG_SCOPES;